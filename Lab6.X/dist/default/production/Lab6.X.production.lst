

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Mar 06 15:31:32 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     _BAUDCONbits	set	4010
    18  0000                     _LATAbits	set	3977
    19  0000                     _LATCbits	set	3979
    20  0000                     _LATDbits	set	3980
    21  0000                     _OSCCON	set	4051
    22  0000                     _OSCCONbits	set	4051
    23  0000                     _PIR1bits	set	3998
    24  0000                     _RCREG	set	4014
    25  0000                     _RCSTAbits	set	4011
    26  0000                     _SPBRG	set	4015
    27  0000                     _SPBRGH	set	4016
    28  0000                     _TRISAbits	set	3986
    29  0000                     _TRISC	set	3988
    30  0000                     _TRISCbits	set	3988
    31  0000                     _TRISDbits	set	3989
    32  0000                     _TXREG	set	4013
    33  0000                     _TXSTAbits	set	4012
    34                           
    35                           ; #config settings
    36  0000                     
    37                           	psect	cinit
    38  001D74                     __pcinit:
    39                           	opt stack 0
    40  001D74                     start_initialization:
    41                           	opt stack 0
    42  001D74                     __initialization:
    43                           	opt stack 0
    44                           
    45                           ; Clear objects allocated to COMRAM (40 bytes)
    46  001D74  EE00  F034         	lfsr	0,__pbssCOMRAM
    47  001D78  0E28               	movlw	40
    48  001D7A                     clear_0:
    49  001D7A  6AEE               	clrf	postinc0,c
    50  001D7C  06E8               	decf	wreg,f,c
    51  001D7E  E1FD               	bnz	clear_0
    52  001D80                     end_of_initialization:
    53                           	opt stack 0
    54  001D80                     __end_of__initialization:
    55                           	opt stack 0
    56  001D80  0100               	movlb	0
    57  001D82  EFF3  F00E         	goto	_main	;jump to C main() function
    58                           postinc0	equ	0xFEE
    59                           wreg	equ	0xFE8
    60                           
    61                           	psect	bssCOMRAM
    62  000034                     __pbssCOMRAM:
    63                           	opt stack 0
    64  000034                     main@F3837:
    65                           	opt stack 0
    66  000034                     	ds	40
    67                           postinc0	equ	0xFEE
    68                           wreg	equ	0xFE8
    69                           
    70                           	psect	cstackCOMRAM
    71  000001                     __pcstackCOMRAM:
    72                           	opt stack 0
    73  000001                     ??_LCDout:
    74  000001                     
    75                           ; 1 bytes @ 0x0
    76  000001                     	ds	3
    77  000004                     LCDout@number:
    78                           	opt stack 0
    79                           
    80                           ; 1 bytes @ 0x3
    81  000004                     	ds	1
    82  000005                     SendLCD@type:
    83                           	opt stack 0
    84                           
    85                           ; 1 bytes @ 0x4
    86  000005                     	ds	1
    87  000006                     SendLCD@Byte:
    88                           	opt stack 0
    89                           
    90                           ; 1 bytes @ 0x5
    91  000006                     	ds	1
    92  000007                     ??_LCD_Init:
    93  000007                     LCD_String@string:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x6
    97  000007                     	ds	2
    98  000009                     main@buf:
    99                           	opt stack 0
   100                           
   101                           ; 40 bytes @ 0x8
   102  000009                     	ds	40
   103  000031                     _main$722:
   104                           	opt stack 0
   105                           
   106                           ; 1 bytes @ 0x30
   107  000031                     	ds	1
   108  000032                     main@i:
   109                           	opt stack 0
   110                           
   111                           ; 1 bytes @ 0x31
   112  000032                     	ds	1
   113  000033                     main@letter:
   114                           	opt stack 0
   115                           
   116                           ; 1 bytes @ 0x32
   117  000033                     	ds	1
   118                           postinc0	equ	0xFEE
   119                           wreg	equ	0xFE8
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 128 in file "main.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;  buf            40    8[COMRAM] unsigned char [40]
   131 ;;  letter          1   50[COMRAM] unsigned char 
   132 ;;  i               1   49[COMRAM] unsigned char 
   133 ;; Return value:  Size  Location     Type
   134 ;;		None               void
   135 ;; Registers used:
   136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   142 ;;      Params:         0       0       0       0
   143 ;;      Locals:        43       0       0       0
   144 ;;      Temps:          0       0       0       0
   145 ;;      Totals:        43       0       0       0
   146 ;;Total ram usage:       43 bytes
   147 ;; Hardware stack levels required when called:    4
   148 ;; This function calls:
   149 ;;		_LCD_Init
   150 ;;		_LCD_String
   151 ;;		_getCharSerial
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  001DE6                     __ptext0:
   159                           	opt stack 0
   160  001DE6                     _main:
   161                           	opt stack 27
   162                           
   163                           ;main.c: 130: char letter=0;
   164                           
   165                           ;incstack = 0
   166  001DE6  0E00               	movlw	0
   167  001DE8  6E33               	movwf	main@letter,c
   168                           
   169                           ;main.c: 131: char buf[40] ={0};
   170  001DEA  EE20  F034         	lfsr	2,main@F3837
   171  001DEE  EE10  F009         	lfsr	1,main@buf
   172  001DF2  0E27               	movlw	39
   173  001DF4                     u321:
   174  001DF4  CFDB FFE3          	movff	plusw2,plusw1
   175  001DF8  06E8               	decf	wreg,f,c
   176  001DFA  E2FC               	bc	u321
   177                           
   178                           ;main.c: 132: unsigned char i=0;
   179  001DFC  0E00               	movlw	0
   180  001DFE  6E32               	movwf	main@i,c
   181                           
   182                           ;main.c: 134: TRISC = TRISC || 0b11000000;
   183  001E00  0E01               	movlw	1
   184  001E02  6E31               	movwf	_main$722,c
   185  001E04  5094               	movf	3988,w,c	;volatile
   186  001E06  C031  FF94         	movff	_main$722,3988	;volatile
   187                           
   188                           ;main.c: 138: OSCCON = 0b11110010;
   189  001E0A  0EF2               	movlw	242
   190  001E0C  6ED3               	movwf	4051,c	;volatile
   191  001E0E                     l85:
   192  001E0E  A4D3               	btfss	4051,2,c	;volatile
   193  001E10  D7FE               	goto	l85
   194                           
   195                           ;main.c: 141: SPBRG=205;
   196  001E12  0ECD               	movlw	205
   197  001E14  6EAF               	movwf	4015,c	;volatile
   198                           
   199                           ;main.c: 142: SPBRGH=0;
   200  001E16  0E00               	movlw	0
   201  001E18  6EB0               	movwf	4016,c	;volatile
   202                           
   203                           ;main.c: 143: BAUDCONbits.BRG16=1;
   204  001E1A  86AA               	bsf	4010,3,c	;volatile
   205                           
   206                           ;main.c: 144: TXSTAbits.BRGH=1;
   207  001E1C  84AC               	bsf	4012,2,c	;volatile
   208                           
   209                           ;main.c: 145: RCSTAbits.CREN=1;
   210  001E1E  88AB               	bsf	4011,4,c	;volatile
   211                           
   212                           ;main.c: 146: RCSTAbits.SPEN=1;
   213  001E20  8EAB               	bsf	4011,7,c	;volatile
   214                           
   215                           ;main.c: 147: TXSTAbits.TXEN=1;
   216  001E22  8AAC               	bsf	4012,5,c	;volatile
   217                           
   218                           ;main.c: 148: TXSTAbits.SYNC=0;
   219  001E24  98AC               	bcf	4012,4,c	;volatile
   220                           
   221                           ;main.c: 149: RCSTAbits.RX9=0;
   222  001E26  9CAB               	bcf	4011,6,c	;volatile
   223                           
   224                           ;main.c: 161: LCD_Init();
   225  001E28  EC3F  F00F         	call	_LCD_Init	;wreg free
   226  001E2C                     l960:
   227                           
   228                           ;main.c: 164: letter=getCharSerial();
   229  001E2C  ECAF  F00E         	call	_getCharSerial	;wreg free
   230  001E30  6E33               	movwf	main@letter,c
   231                           
   232                           ;main.c: 165: if(letter==0x02){
   233  001E32  0E02               	movlw	2
   234  001E34  1833               	xorwf	main@letter,w,c
   235  001E36  B4D8               	btfsc	status,2,c
   236  001E38  D013               	goto	l972
   237  001E3A  D7F8               	goto	l960
   238  001E3C                     l964:
   239                           
   240                           ;main.c: 167: if(letter!=0x03){
   241  001E3C  0E03               	movlw	3
   242  001E3E  1833               	xorwf	main@letter,w,c
   243  001E40  B4D8               	btfsc	status,2,c
   244  001E42  D00E               	goto	l972
   245                           
   246                           ;main.c: 168: letter=getCharSerial();
   247  001E44  ECAF  F00E         	call	_getCharSerial	;wreg free
   248  001E48  6E33               	movwf	main@letter,c
   249                           
   250                           ;main.c: 169: buf[i]=letter;
   251  001E4A  5032               	movf	main@i,w,c
   252  001E4C  0D01               	mullw	1
   253  001E4E  0E09               	movlw	low main@buf
   254  001E50  24F3               	addwf	prodl,w,c
   255  001E52  6ED9               	movwf	fsr2l,c
   256  001E54  0E00               	movlw	high main@buf
   257  001E56  20F4               	addwfc	prodh,w,c
   258  001E58  6EDA               	movwf	fsr2h,c
   259  001E5A  C033  FFDF         	movff	main@letter,indf2
   260                           
   261                           ;main.c: 170: i++;
   262  001E5E  2A32               	incf	main@i,f,c
   263  001E60                     l972:
   264  001E60  0E03               	movlw	3
   265  001E62  1833               	xorwf	main@letter,w,c
   266  001E64  A4D8               	btfss	status,2,c
   267  001E66  D7EA               	goto	l964
   268                           
   269                           ;main.c: 171: }
   270                           ;main.c: 172: }
   271                           ;main.c: 173: LCD_String(buf);
   272  001E68  0E09               	movlw	low main@buf
   273  001E6A  6E07               	movwf	LCD_String@string,c
   274  001E6C  0E00               	movlw	high main@buf
   275  001E6E  6E08               	movwf	LCD_String@string+1,c
   276  001E70  ECDB  F00E         	call	_LCD_String	;wreg free
   277                           
   278                           ;main.c: 174: letter=0;
   279  001E74  0E00               	movlw	0
   280  001E76  6E33               	movwf	main@letter,c
   281                           
   282                           ;main.c: 175: i=0;
   283  001E78  0E00               	movlw	0
   284  001E7A  6E32               	movwf	main@i,c
   285  001E7C  D7D7               	goto	l960
   286  001E7E                     __end_of_main:
   287                           	opt stack 0
   288                           prodh	equ	0xFF4
   289                           prodl	equ	0xFF3
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           plusw1	equ	0xFE3
   293                           indf2	equ	0xFDF
   294                           plusw2	equ	0xFDB
   295                           fsr2h	equ	0xFDA
   296                           fsr2l	equ	0xFD9
   297                           status	equ	0xFD8
   298                           
   299 ;; *************** function _getCharSerial *****************
   300 ;; Defined at:
   301 ;;		line 111 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      unsigned char 
   308 ;; Registers used:
   309 ;;		wreg, status,2
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   315 ;;      Params:         0       0       0       0
   316 ;;      Locals:         0       0       0       0
   317 ;;      Temps:          0       0       0       0
   318 ;;      Totals:         0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text1
   329  001D5E                     __ptext1:
   330                           	opt stack 0
   331  001D5E                     _getCharSerial:
   332                           	opt stack 30
   333  001D5E                     l69:
   334  001D5E  AA9E               	btfss	3998,5,c	;volatile
   335  001D60  D7FE               	goto	l69
   336                           
   337                           ;main.c: 113: return RCREG;
   338  001D62  50AE               	movf	4014,w,c	;volatile
   339  001D64  0012               	return	
   340  001D66                     __end_of_getCharSerial:
   341                           	opt stack 0
   342                           prodh	equ	0xFF4
   343                           prodl	equ	0xFF3
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           plusw1	equ	0xFE3
   347                           indf2	equ	0xFDF
   348                           plusw2	equ	0xFDB
   349                           fsr2h	equ	0xFDA
   350                           fsr2l	equ	0xFD9
   351                           status	equ	0xFD8
   352                           
   353 ;; *************** function _LCD_String *****************
   354 ;; Defined at:
   355 ;;		line 94 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;  string          2    6[COMRAM] PTR unsigned char 
   358 ;;		 -> main@buf(40), 
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;		None               void
   363 ;; Registers used:
   364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   370 ;;      Params:         2       0       0       0
   371 ;;      Locals:         0       0       0       0
   372 ;;      Temps:          0       0       0       0
   373 ;;      Totals:         2       0       0       0
   374 ;;Total ram usage:        2 bytes
   375 ;; Hardware stack levels used:    1
   376 ;; Hardware stack levels required when called:    3
   377 ;; This function calls:
   378 ;;		_SendLCD
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text2
   385  001DB6                     __ptext2:
   386                           	opt stack 0
   387  001DB6                     _LCD_String:
   388                           	opt stack 27
   389                           
   390                           ;main.c: 96: while(*string != 0){
   391                           
   392                           ;incstack = 0
   393  001DB6  D00F               	goto	l908
   394  001DB8                     l902:
   395                           
   396                           ;main.c: 99: SendLCD(*string++,1);
   397  001DB8  0E01               	movlw	1
   398  001DBA  6E05               	movwf	SendLCD@type,c
   399  001DBC  C007  FFD9         	movff	LCD_String@string,fsr2l
   400  001DC0  C008  FFDA         	movff	LCD_String@string+1,fsr2h
   401  001DC4  50DF               	movf	indf2,w,c
   402  001DC6  ECC3  F00E         	call	_SendLCD
   403  001DCA  4A07               	infsnz	LCD_String@string,f,c
   404  001DCC  2A08               	incf	LCD_String@string+1,f,c
   405                           
   406                           ;main.c: 100: _delay((unsigned long)((50)*(8000000/4000000.0)));
   407  001DCE  0E21               	movlw	33
   408  001DD0                     u377:
   409  001DD0  2EE8               	decfsz	wreg,f,c
   410  001DD2  D7FE               	goto	u377
   411  001DD4  F000               	nop	
   412  001DD6                     l908:
   413  001DD6  C007  FFD9         	movff	LCD_String@string,fsr2l
   414  001DDA  C008  FFDA         	movff	LCD_String@string+1,fsr2h
   415  001DDE  50DF               	movf	indf2,w,c
   416  001DE0  B4D8               	btfsc	status,2,c
   417  001DE2  0012               	return	
   418  001DE4  D7E9               	goto	l902
   419  001DE6                     __end_of_LCD_String:
   420                           	opt stack 0
   421                           prodh	equ	0xFF4
   422                           prodl	equ	0xFF3
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           plusw1	equ	0xFE3
   426                           indf2	equ	0xFDF
   427                           plusw2	equ	0xFDB
   428                           fsr2h	equ	0xFDA
   429                           fsr2l	equ	0xFD9
   430                           status	equ	0xFD8
   431                           
   432 ;; *************** function _LCD_Init *****************
   433 ;; Defined at:
   434 ;;		line 49 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;		None               void
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   448 ;;      Params:         0       0       0       0
   449 ;;      Locals:         0       0       0       0
   450 ;;      Temps:          1       0       0       0
   451 ;;      Totals:         1       0       0       0
   452 ;;Total ram usage:        1 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    3
   455 ;; This function calls:
   456 ;;		_LCDout
   457 ;;		_SendLCD
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text3
   464  001E7E                     __ptext3:
   465                           	opt stack 0
   466  001E7E                     _LCD_Init:
   467                           	opt stack 27
   468                           
   469                           ;main.c: 55: TRISAbits.RA6=0;
   470                           
   471                           ;incstack = 0
   472  001E7E  9C92               	bcf	3986,6,c	;volatile
   473                           
   474                           ;main.c: 56: TRISCbits.RC0=0;
   475  001E80  9094               	bcf	3988,0,c	;volatile
   476                           
   477                           ;main.c: 57: TRISCbits.RC1=0;
   478  001E82  9294               	bcf	3988,1,c	;volatile
   479                           
   480                           ;main.c: 58: TRISCbits.RC2=0;
   481  001E84  9494               	bcf	3988,2,c	;volatile
   482                           
   483                           ;main.c: 59: TRISDbits.RD0=0;
   484  001E86  9095               	bcf	3989,0,c	;volatile
   485                           
   486                           ;main.c: 60: TRISDbits.RD1=0;
   487  001E88  9295               	bcf	3989,1,c	;volatile
   488                           
   489                           ;main.c: 62: _delay((unsigned long)((15)*(8000000/4000.0)));
   490  001E8A  0E27               	movlw	39
   491  001E8C  6E07               	movwf	??_LCD_Init& (0+255),c
   492  001E8E  0EF5               	movlw	245
   493  001E90                     u387:
   494  001E90  2EE8               	decfsz	wreg,f,c
   495  001E92  D7FE               	goto	u387
   496  001E94  2E07               	decfsz	??_LCD_Init& (0+255),f,c
   497  001E96  D7FC               	goto	u387
   498  001E98  F000               	nop	
   499                           
   500                           ;main.c: 63: LCDout(0b0011);
   501  001E9A  0E03               	movlw	3
   502  001E9C  EC9D  F00F         	call	_LCDout
   503                           
   504                           ;main.c: 64: _delay((unsigned long)((5)*(8000000/4000.0)));
   505  001EA0  0E0D               	movlw	13
   506  001EA2  6E07               	movwf	??_LCD_Init& (0+255),c
   507  001EA4  0EFC               	movlw	252
   508  001EA6                     u397:
   509  001EA6  2EE8               	decfsz	wreg,f,c
   510  001EA8  D7FE               	goto	u397
   511  001EAA  2E07               	decfsz	??_LCD_Init& (0+255),f,c
   512  001EAC  D7FC               	goto	u397
   513                           
   514                           ;main.c: 65: LCDout(0b0011);
   515  001EAE  0E03               	movlw	3
   516  001EB0  EC9D  F00F         	call	_LCDout
   517                           
   518                           ;main.c: 66: _delay((unsigned long)((200)*(8000000/4000000.0)));
   519  001EB4  0E85               	movlw	133
   520  001EB6                     u407:
   521  001EB6  2EE8               	decfsz	wreg,f,c
   522  001EB8  D7FE               	goto	u407
   523  001EBA  F000               	nop	
   524                           
   525                           ;main.c: 67: LCDout(0b0011);
   526  001EBC  0E03               	movlw	3
   527  001EBE  EC9D  F00F         	call	_LCDout
   528                           
   529                           ;main.c: 68: _delay((unsigned long)((50)*(8000000/4000000.0)));
   530  001EC2  0E21               	movlw	33
   531  001EC4                     u417:
   532  001EC4  2EE8               	decfsz	wreg,f,c
   533  001EC6  D7FE               	goto	u417
   534  001EC8  F000               	nop	
   535                           
   536                           ;main.c: 69: LCDout(0b0010);
   537  001ECA  0E02               	movlw	2
   538  001ECC  EC9D  F00F         	call	_LCDout
   539                           
   540                           ;main.c: 70: _delay((unsigned long)((50)*(8000000/4000000.0)));
   541  001ED0  0E21               	movlw	33
   542  001ED2                     u427:
   543  001ED2  2EE8               	decfsz	wreg,f,c
   544  001ED4  D7FE               	goto	u427
   545  001ED6  F000               	nop	
   546                           
   547                           ;main.c: 73: SendLCD(0b00101000,0);
   548  001ED8  0E00               	movlw	0
   549  001EDA  6E05               	movwf	SendLCD@type,c
   550  001EDC  0E28               	movlw	40
   551  001EDE  ECC3  F00E         	call	_SendLCD
   552                           
   553                           ;main.c: 74: _delay((unsigned long)((50)*(8000000/4000000.0)));
   554  001EE2  0E21               	movlw	33
   555  001EE4                     u437:
   556  001EE4  2EE8               	decfsz	wreg,f,c
   557  001EE6  D7FE               	goto	u437
   558  001EE8  F000               	nop	
   559                           
   560                           ;main.c: 75: SendLCD(0b00001000,0);
   561  001EEA  0E00               	movlw	0
   562  001EEC  6E05               	movwf	SendLCD@type,c
   563  001EEE  0E08               	movlw	8
   564  001EF0  ECC3  F00E         	call	_SendLCD
   565                           
   566                           ;main.c: 76: _delay((unsigned long)((50)*(8000000/4000000.0)));
   567  001EF4  0E21               	movlw	33
   568  001EF6                     u447:
   569  001EF6  2EE8               	decfsz	wreg,f,c
   570  001EF8  D7FE               	goto	u447
   571  001EFA  F000               	nop	
   572                           
   573                           ;main.c: 77: SendLCD(0b00000001,0);
   574  001EFC  0E00               	movlw	0
   575  001EFE  6E05               	movwf	SendLCD@type,c
   576  001F00  0E01               	movlw	1
   577  001F02  ECC3  F00E         	call	_SendLCD
   578                           
   579                           ;main.c: 78: _delay((unsigned long)((5)*(8000000/4000.0)));
   580  001F06  0E0D               	movlw	13
   581  001F08  6E07               	movwf	??_LCD_Init& (0+255),c
   582  001F0A  0EFC               	movlw	252
   583  001F0C                     u457:
   584  001F0C  2EE8               	decfsz	wreg,f,c
   585  001F0E  D7FE               	goto	u457
   586  001F10  2E07               	decfsz	??_LCD_Init& (0+255),f,c
   587  001F12  D7FC               	goto	u457
   588                           
   589                           ;main.c: 79: SendLCD(0b00000110,0);
   590  001F14  0E00               	movlw	0
   591  001F16  6E05               	movwf	SendLCD@type,c
   592  001F18  0E06               	movlw	6
   593  001F1A  ECC3  F00E         	call	_SendLCD
   594                           
   595                           ;main.c: 80: _delay((unsigned long)((50)*(8000000/4000000.0)));
   596  001F1E  0E21               	movlw	33
   597  001F20                     u467:
   598  001F20  2EE8               	decfsz	wreg,f,c
   599  001F22  D7FE               	goto	u467
   600  001F24  F000               	nop	
   601                           
   602                           ;main.c: 81: SendLCD(0b00001100,0);
   603  001F26  0E00               	movlw	0
   604  001F28  6E05               	movwf	SendLCD@type,c
   605  001F2A  0E0C               	movlw	12
   606  001F2C  ECC3  F00E         	call	_SendLCD
   607                           
   608                           ;main.c: 82: _delay((unsigned long)((50)*(8000000/4000000.0)));
   609  001F30  0E21               	movlw	33
   610  001F32                     u477:
   611  001F32  2EE8               	decfsz	wreg,f,c
   612  001F34  D7FE               	goto	u477
   613  001F36  F000               	nop	
   614  001F38  0012               	return		;funcret
   615  001F3A                     __end_of_LCD_Init:
   616                           	opt stack 0
   617                           prodh	equ	0xFF4
   618                           prodl	equ	0xFF3
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           plusw1	equ	0xFE3
   622                           indf2	equ	0xFDF
   623                           plusw2	equ	0xFDB
   624                           fsr2h	equ	0xFDA
   625                           fsr2l	equ	0xFD9
   626                           status	equ	0xFD8
   627                           
   628 ;; *************** function _SendLCD *****************
   629 ;; Defined at:
   630 ;;		line 38 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  Byte            1    wreg     unsigned char 
   633 ;;  type            1    4[COMRAM] unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  Byte            1    5[COMRAM] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;		None               void
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   645 ;;      Params:         1       0       0       0
   646 ;;      Locals:         1       0       0       0
   647 ;;      Temps:          0       0       0       0
   648 ;;      Totals:         2       0       0       0
   649 ;;Total ram usage:        2 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    2
   652 ;; This function calls:
   653 ;;		_LCDout
   654 ;; This function is called by:
   655 ;;		_LCD_Init
   656 ;;		_LCD_String
   657 ;;		_SetLine
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text4
   662  001D86                     __ptext4:
   663                           	opt stack 0
   664  001D86                     _SendLCD:
   665                           	opt stack 27
   666                           
   667                           ;incstack = 0
   668                           ;SendLCD@Byte stored from wreg
   669  001D86  6E06               	movwf	SendLCD@Byte,c
   670                           
   671                           ;main.c: 41: LATAbits.LATA6=type;
   672  001D88  B005               	btfsc	SendLCD@type,0,c
   673  001D8A  D002               	bra	u275
   674  001D8C  9C89               	bcf	3977,6,c	;volatile
   675  001D8E  D001               	bra	u276
   676  001D90                     u275:
   677  001D90  8C89               	bsf	3977,6,c	;volatile
   678  001D92                     u276:
   679                           
   680                           ;main.c: 43: LCDout((Byte&0xF0)>>4);
   681  001D92  3806               	swapf	SendLCD@Byte,w,c
   682  001D94  0B0F               	andlw	15
   683  001D96  0B0F               	andlw	15
   684  001D98  EC9D  F00F         	call	_LCDout
   685                           
   686                           ;main.c: 44: _delay((unsigned long)((10)*(8000000/4000000.0)));
   687  001D9C  0E06               	movlw	6
   688  001D9E                     u487:
   689  001D9E  2EE8               	decfsz	wreg,f,c
   690  001DA0  D7FE               	goto	u487
   691  001DA2  D000               	nop2		;nop
   692                           
   693                           ;main.c: 46: LCDout(Byte&0x0F);
   694  001DA4  5006               	movf	SendLCD@Byte,w,c
   695  001DA6  0B0F               	andlw	15
   696  001DA8  EC9D  F00F         	call	_LCDout
   697                           
   698                           ;main.c: 47: _delay((unsigned long)((50)*(8000000/4000000.0)));
   699  001DAC  0E21               	movlw	33
   700  001DAE                     u497:
   701  001DAE  2EE8               	decfsz	wreg,f,c
   702  001DB0  D7FE               	goto	u497
   703  001DB2  F000               	nop	
   704  001DB4  0012               	return		;funcret
   705  001DB6                     __end_of_SendLCD:
   706                           	opt stack 0
   707                           prodh	equ	0xFF4
   708                           prodl	equ	0xFF3
   709                           postinc0	equ	0xFEE
   710                           wreg	equ	0xFE8
   711                           plusw1	equ	0xFE3
   712                           indf2	equ	0xFDF
   713                           plusw2	equ	0xFDB
   714                           fsr2h	equ	0xFDA
   715                           fsr2l	equ	0xFD9
   716                           status	equ	0xFD8
   717                           
   718 ;; *************** function _LCDout *****************
   719 ;; Defined at:
   720 ;;		line 25 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  number          1    wreg     unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  number          1    3[COMRAM] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;		None               void
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   734 ;;      Params:         0       0       0       0
   735 ;;      Locals:         1       0       0       0
   736 ;;      Temps:          3       0       0       0
   737 ;;      Totals:         4       0       0       0
   738 ;;Total ram usage:        4 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    1
   741 ;; This function calls:
   742 ;;		_E_TOG
   743 ;; This function is called by:
   744 ;;		_SendLCD
   745 ;;		_LCD_Init
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text5
   750  001F3A                     __ptext5:
   751                           	opt stack 0
   752  001F3A                     _LCDout:
   753                           	opt stack 27
   754                           
   755                           ;incstack = 0
   756                           ;LCDout@number stored from wreg
   757  001F3A  6E04               	movwf	LCDout@number,c
   758                           
   759                           ;main.c: 28: LATCbits.LATC1 = (number<<7)>>7;
   760  001F3C  5004               	movf	LCDout@number,w,c
   761  001F3E  6E01               	movwf	??_LCDout& (0+255),c
   762  001F40  6A02               	clrf	(??_LCDout+1)& (0+255),c
   763  001F42  0E07               	movlw	7
   764  001F44                     u205:
   765  001F44  90D8               	bcf	status,0,c
   766  001F46  3601               	rlcf	??_LCDout,f,c
   767  001F48  3602               	rlcf	??_LCDout+1,f,c
   768  001F4A  2EE8               	decfsz	wreg,f,c
   769  001F4C  D7FB               	goto	u205
   770  001F4E  0E07               	movlw	7
   771  001F50  6E03               	movwf	(??_LCDout+2)& (0+255),c
   772  001F52                     u215:
   773  001F52  3402               	rlcf	??_LCDout+1,w,c
   774  001F54  3202               	rrcf	??_LCDout+1,f,c
   775  001F56  3201               	rrcf	??_LCDout,f,c
   776  001F58  2E03               	decfsz	(??_LCDout+2)& (0+255),f,c
   777  001F5A  D7FB               	goto	u215
   778  001F5C  4601               	rlncf	??_LCDout,f,c
   779  001F5E  508B               	movf	3979,w,c	;volatile
   780  001F60  1801               	xorwf	??_LCDout,w,c
   781  001F62  0BFD               	andlw	-3
   782  001F64  1801               	xorwf	??_LCDout,w,c
   783  001F66  6E8B               	movwf	3979,c	;volatile
   784                           
   785                           ;main.c: 29: LATCbits.LATC2 = (number<<6)>>7;
   786  001F68  5004               	movf	LCDout@number,w,c
   787  001F6A  6E01               	movwf	??_LCDout& (0+255),c
   788  001F6C  6A02               	clrf	(??_LCDout+1)& (0+255),c
   789  001F6E  0E06               	movlw	6
   790  001F70                     u225:
   791  001F70  90D8               	bcf	status,0,c
   792  001F72  3601               	rlcf	??_LCDout,f,c
   793  001F74  3602               	rlcf	??_LCDout+1,f,c
   794  001F76  2EE8               	decfsz	wreg,f,c
   795  001F78  D7FB               	goto	u225
   796  001F7A  0E07               	movlw	7
   797  001F7C  6E03               	movwf	(??_LCDout+2)& (0+255),c
   798  001F7E                     u235:
   799  001F7E  3402               	rlcf	??_LCDout+1,w,c
   800  001F80  3202               	rrcf	??_LCDout+1,f,c
   801  001F82  3201               	rrcf	??_LCDout,f,c
   802  001F84  2E03               	decfsz	(??_LCDout+2)& (0+255),f,c
   803  001F86  D7FB               	goto	u235
   804  001F88  4601               	rlncf	??_LCDout,f,c
   805  001F8A  4601               	rlncf	??_LCDout,f,c
   806  001F8C  508B               	movf	3979,w,c	;volatile
   807  001F8E  1801               	xorwf	??_LCDout,w,c
   808  001F90  0BFB               	andlw	-5
   809  001F92  1801               	xorwf	??_LCDout,w,c
   810  001F94  6E8B               	movwf	3979,c	;volatile
   811                           
   812                           ;main.c: 30: LATDbits.LATD0 = (number<<5)>>7;
   813  001F96  5004               	movf	LCDout@number,w,c
   814  001F98  6E01               	movwf	??_LCDout& (0+255),c
   815  001F9A  6A02               	clrf	(??_LCDout+1)& (0+255),c
   816  001F9C  0E05               	movlw	5
   817  001F9E                     u245:
   818  001F9E  90D8               	bcf	status,0,c
   819  001FA0  3601               	rlcf	??_LCDout,f,c
   820  001FA2  3602               	rlcf	??_LCDout+1,f,c
   821  001FA4  2EE8               	decfsz	wreg,f,c
   822  001FA6  D7FB               	goto	u245
   823  001FA8  0E07               	movlw	7
   824  001FAA  6E03               	movwf	(??_LCDout+2)& (0+255),c
   825  001FAC                     u255:
   826  001FAC  3402               	rlcf	??_LCDout+1,w,c
   827  001FAE  3202               	rrcf	??_LCDout+1,f,c
   828  001FB0  3201               	rrcf	??_LCDout,f,c
   829  001FB2  2E03               	decfsz	(??_LCDout+2)& (0+255),f,c
   830  001FB4  D7FB               	goto	u255
   831  001FB6  508C               	movf	3980,w,c	;volatile
   832  001FB8  1801               	xorwf	??_LCDout,w,c
   833  001FBA  0BFE               	andlw	-2
   834  001FBC  1801               	xorwf	??_LCDout,w,c
   835  001FBE  6E8C               	movwf	3980,c	;volatile
   836                           
   837                           ;main.c: 31: LATDbits.LATD1 = (number<<4)>>7;
   838  001FC0  5004               	movf	LCDout@number,w,c
   839  001FC2  6E01               	movwf	??_LCDout& (0+255),c
   840  001FC4  6A02               	clrf	(??_LCDout+1)& (0+255),c
   841  001FC6  3A01               	swapf	??_LCDout,f,c
   842  001FC8  3A02               	swapf	??_LCDout+1,f,c
   843  001FCA  0EF0               	movlw	240
   844  001FCC  1602               	andwf	??_LCDout+1,f,c
   845  001FCE  5001               	movf	??_LCDout,w,c
   846  001FD0  0B0F               	andlw	15
   847  001FD2  1202               	iorwf	??_LCDout+1,f,c
   848  001FD4  0EF0               	movlw	240
   849  001FD6  1601               	andwf	??_LCDout,f,c
   850  001FD8  0E07               	movlw	7
   851  001FDA  6E03               	movwf	(??_LCDout+2)& (0+255),c
   852  001FDC                     u265:
   853  001FDC  3402               	rlcf	??_LCDout+1,w,c
   854  001FDE  3202               	rrcf	??_LCDout+1,f,c
   855  001FE0  3201               	rrcf	??_LCDout,f,c
   856  001FE2  2E03               	decfsz	(??_LCDout+2)& (0+255),f,c
   857  001FE4  D7FB               	goto	u265
   858  001FE6  4601               	rlncf	??_LCDout,f,c
   859  001FE8  508C               	movf	3980,w,c	;volatile
   860  001FEA  1801               	xorwf	??_LCDout,w,c
   861  001FEC  0BFD               	andlw	-3
   862  001FEE  1801               	xorwf	??_LCDout,w,c
   863  001FF0  6E8C               	movwf	3980,c	;volatile
   864                           
   865                           ;main.c: 32: E_TOG();
   866  001FF2  ECB3  F00E         	call	_E_TOG	;wreg free
   867                           
   868                           ;main.c: 33: _delay((unsigned long)((5)*(8000000/4000000.0)));
   869  001FF6  0E03               	movlw	3
   870  001FF8                     u507:
   871  001FF8  2EE8               	decfsz	wreg,f,c
   872  001FFA  D7FE               	goto	u507
   873  001FFC  F000               	nop	
   874  001FFE  0012               	return		;funcret
   875  002000                     __end_of_LCDout:
   876                           	opt stack 0
   877                           prodh	equ	0xFF4
   878                           prodl	equ	0xFF3
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           plusw1	equ	0xFE3
   882                           indf2	equ	0xFDF
   883                           plusw2	equ	0xFDB
   884                           fsr2h	equ	0xFDA
   885                           fsr2l	equ	0xFD9
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function _E_TOG *****************
   889 ;; Defined at:
   890 ;;		line 16 in file "main.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;		None               void
   897 ;; Registers used:
   898 ;;		wreg
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   904 ;;      Params:         0       0       0       0
   905 ;;      Locals:         0       0       0       0
   906 ;;      Temps:          0       0       0       0
   907 ;;      Totals:         0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_LCDout
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text6
   918  001D66                     __ptext6:
   919                           	opt stack 0
   920  001D66                     _E_TOG:
   921                           	opt stack 27
   922                           
   923                           ;main.c: 19: LATCbits.LATC0=1;
   924                           
   925                           ;incstack = 0
   926  001D66  808B               	bsf	3979,0,c	;volatile
   927                           
   928                           ;main.c: 20: _delay((unsigned long)((5)*(8000000/4000000.0)));
   929  001D68  0E03               	movlw	3
   930  001D6A                     u517:
   931  001D6A  2EE8               	decfsz	wreg,f,c
   932  001D6C  D7FE               	goto	u517
   933  001D6E  F000               	nop	
   934                           
   935                           ;main.c: 21: LATCbits.LATC0=0;
   936  001D70  908B               	bcf	3979,0,c	;volatile
   937  001D72  0012               	return		;funcret
   938  001D74                     __end_of_E_TOG:
   939                           	opt stack 0
   940  0000                     prodh	equ	0xFF4
   941                           prodl	equ	0xFF3
   942                           postinc0	equ	0xFEE
   943                           wreg	equ	0xFE8
   944                           plusw1	equ	0xFE3
   945                           indf2	equ	0xFDF
   946                           plusw2	equ	0xFDB
   947                           fsr2h	equ	0xFDA
   948                           fsr2l	equ	0xFD9
   949                           status	equ	0xFD8
   950                           prodh	equ	0xFF4
   951                           prodl	equ	0xFF3
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           plusw1	equ	0xFE3
   955                           indf2	equ	0xFDF
   956                           plusw2	equ	0xFDB
   957                           fsr2h	equ	0xFDA
   958                           fsr2l	equ	0xFD9
   959                           status	equ	0xFD8
   960                           
   961                           	psect	rparam
   962  0000                     prodh	equ	0xFF4
   963                           prodl	equ	0xFF3
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           plusw1	equ	0xFE3
   967                           indf2	equ	0xFDF
   968                           plusw2	equ	0xFDB
   969                           fsr2h	equ	0xFDA
   970                           fsr2l	equ	0xFD9
   971                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      91
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    LCD_String@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(COMRAM[40]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String
    _LCD_String->_SendLCD
    _LCD_Init->_SendLCD
    _SendLCD->_LCDout

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0    1719
                                              8 COMRAM    43    43      0
                           _LCD_Init
                         _LCD_String
                      _getCharSerial
 ---------------------------------------------------------------------------------
 (1) _getCharSerial                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2     775
                                              6 COMRAM     2     0      2
                            _SendLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     754
                                              6 COMRAM     1     1      0
                             _LCDout
                            _SendLCD
 ---------------------------------------------------------------------------------
 (2) _SendLCD                                              2     1      1     666
                                              4 COMRAM     2     1      1
                             _LCDout
 ---------------------------------------------------------------------------------
 (3) _LCDout                                               4     4      0      88
                                              0 COMRAM     4     4      0
                              _E_TOG
 ---------------------------------------------------------------------------------
 (4) _E_TOG                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCDout
       _E_TOG
     _SendLCD
       _LCDout
         _E_TOG
   _LCD_String
     _SendLCD
       _LCDout
         _E_TOG
   _getCharSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     33      5B       1       95.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B       3        0.0%
DATA                 0      0      5B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Mar 06 15:31:32 2018

                     l69 1D5E                       l85 1E0E              ?_LCD_String 0007  
                    l902 1DB8                      l908 1DD6                      l960 1E2C  
                    l964 1E3C                      l972 1E60                      u205 1F44  
                    u215 1F52                      u225 1F70                      u321 1DF4  
                    u235 1F7E                      u245 1F9E                      u255 1FAC  
                    u407 1EB6                      u265 1FDC                      u417 1EC4  
                    u507 1FF8                      u275 1D90                      u427 1ED2  
                    u276 1D92                      u517 1D6A                      u437 1EE4  
                    u447 1EF6                      u457 1F0C                      u377 1DD0  
                    u467 1F20                      u387 1E90                      u477 1F32  
                    u397 1EA6                      u487 1D9E                      u497 1DAE  
                    prod 000FF3                      wreg 000FE8                     _main 1DE6  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   prodl 000FF3                     start 0000             ___param_bank 000010  
        __end_of_SendLCD 1DB6         __end_of_LCD_Init 1F3A                    ?_main 0001  
                  _RCREG 000FAE                    _E_TOG 1D66                    _SPBRG 000FAF  
                  _TRISC 000F94                    _TXREG 000FAD                    main@i 0032  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
    __size_of_LCD_String 0030          __initialization 1D74             __end_of_main 1E7E  
         __CFG_OSC$IRCIO 000000         LCD_String@string 0007                   ??_main 0009  
          __activetblptr 000000                   ?_E_TOG 0001           __CFG_WDTEN$OFF 000000  
                 _LCDout 1F3A              SendLCD@Byte 0006                   _OSCCON 000FD3  
  __end_of_getCharSerial 1D66                   _SPBRGH 000FB0              SendLCD@type 0005  
              ??_SendLCD 0006                   clear_0 1D7A               __accesstop 0060  
__end_of__initialization 1D80                ?_LCD_Init 0001            ___rparam_used 000001  
          __end_of_E_TOG 1D74           __pcstackCOMRAM 0001             ??_LCD_String 0009  
                ??_E_TOG 0001                  ?_LCDout 0001               ??_LCD_Init 0007  
     __end_of_LCD_String 1DE6          __size_of_LCDout 00C6                  _SendLCD 1D86  
                __Hparam 0000                  __Lparam 0000                  __pcinit 1D74  
                __ramtop 0300                  __ptext0 1DE6                  __ptext1 1D5E  
                __ptext2 1DB6                  __ptext3 1E7E                  __ptext4 1D86  
                __ptext5 1F3A                  __ptext6 1D66             LCDout@number 0004  
                main@buf 0009     end_of_initialization 1D80                _RCSTAbits 000FAB  
                postinc0 000FEE                _TRISAbits 000F92                _TRISCbits 000F94  
              _TRISDbits 000F95           __end_of_LCDout 2000                _TXSTAbits 000FAC  
             main@letter 0033        __size_of_LCD_Init 00BC              _BAUDCONbits 000FAA  
 __size_of_getCharSerial 0008      start_initialization 1D74                 ??_LCDout 0001  
            __pbssCOMRAM 0034            _getCharSerial 1D5E                 ?_SendLCD 0005  
         __size_of_E_TOG 000E           ?_getCharSerial 0001                 _LCD_Init 1E7E  
               _LATAbits 000F89                 _LATCbits 000F8B                 _LATDbits 000F8C  
               _PIR1bits 000F9E                main@F3837 0034                 __Hrparam 0000  
       __size_of_SendLCD 0030                 __Lrparam 0000                 _main$722 0031  
        ??_getCharSerial 0001            __size_of_main 0098               _LCD_String 1DB6  
             _OSCCONbits 000FD3  
